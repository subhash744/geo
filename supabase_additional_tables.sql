-- Create leaderboard_entries table
CREATE TABLE leaderboard_entries (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  user_id UUID REFERENCES profiles NOT NULL,
  username TEXT,
  display_name TEXT,
  avatar TEXT,
  rank INTEGER,
  score NUMERIC,
  views INTEGER,
  upvotes INTEGER,
  streak INTEGER,
  project_count INTEGER,
  badges JSONB,
  sort_by TEXT,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- Create upvotes table
CREATE TABLE upvotes (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  user_id UUID REFERENCES profiles NOT NULL,
  voter_id TEXT,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- Create daily_stats table
CREATE TABLE daily_stats (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  user_id UUID REFERENCES profiles NOT NULL,
  date TEXT,
  views INTEGER DEFAULT 0,
  upvotes INTEGER DEFAULT 0,
  xp INTEGER DEFAULT 0
);

-- Create hall_of_fame table
CREATE TABLE hall_of_fame (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  user_id UUID REFERENCES profiles NOT NULL,
  featured_count INTEGER DEFAULT 0,
  hall_of_famer BOOLEAN DEFAULT false,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- Set up Row Level Security (RLS)
ALTER TABLE leaderboard_entries ENABLE ROW LEVEL SECURITY;
ALTER TABLE upvotes ENABLE ROW LEVEL SECURITY;
ALTER TABLE daily_stats ENABLE ROW LEVEL SECURITY;
ALTER TABLE hall_of_fame ENABLE ROW LEVEL SECURITY;

-- Create policies for leaderboard_entries
CREATE POLICY "Public leaderboard entries are viewable by everyone" ON leaderboard_entries
  FOR SELECT USING (true);

CREATE POLICY "Users can insert their own leaderboard entries" ON leaderboard_entries
  FOR INSERT WITH CHECK (auth.uid() = user_id);

CREATE POLICY "Users can update their own leaderboard entries" ON leaderboard_entries
  FOR UPDATE USING (auth.uid() = user_id);

-- Create policies for upvotes
CREATE POLICY "Upvotes are viewable by everyone" ON upvotes
  FOR SELECT USING (true);

CREATE POLICY "Users can insert upvotes" ON upvotes
  FOR INSERT WITH CHECK (true);

-- Create policies for daily_stats
CREATE POLICY "Daily stats are viewable by everyone" ON daily_stats
  FOR SELECT USING (true);

CREATE POLICY "Users can insert their own daily stats" ON daily_stats
  FOR INSERT WITH CHECK (auth.uid() = user_id);

CREATE POLICY "Users can update their own daily stats" ON daily_stats
  FOR UPDATE USING (auth.uid() = user_id);

-- Create policies for hall_of_fame
CREATE POLICY "Hall of fame entries are viewable by everyone" ON hall_of_fame
  FOR SELECT USING (true);

CREATE POLICY "Users can insert their own hall of fame entries" ON hall_of_fame
  FOR INSERT WITH CHECK (auth.uid() = user_id);

CREATE POLICY "Users can update their own hall of fame entries" ON hall_of_fame
  FOR UPDATE USING (auth.uid() = user_id);